#include <iostream>
#include<fstream>
#include<string>
#include<cmath>

using namespace std;

class PointR
{
private:
	float m_r, m_fi;
public:
	PointR();
	PointR(const PointR& c);
	void SetXYPosition(float x, float y);
	void GetXYPosition(float& x, float& y);
	PointR& operator =(const PointR& c);
	float GetAngle() const 
	{
		return m_fi;
	}
	float GetRadius() const
	{
		return m_r;
	}
};
PointR::PointR()
{
	m_r = 0.0;
	m_fi = 0.0;
}
PointR::PointR(const PointR& c)
{
	m_r = c.m_r;
	m_fi = c.m_fi;
}
void PointR::SetXYPosition(float x, float y) 
{
	m_r = sqrt(x * x + y * y);
	m_fi = atan(y / x);
}
void PointR::GetXYPosition(float& x, float& y)
{
	x = m_r * cos(m_fi);
	y = m_r*cos(m_fi);
}
PointR& PointR::operator =(const PointR& c)
{
	m_r = c.m_r;
	m_fi = c.m_fi;
	return *this;
}
ostream& operator <<(ostream& out, PointR& c)
{
	out << c.GetRadius() << c.GetAngle();
	return out;

}
int main()
{  
	float x, y;
	PointR p;
	cout << "Unesite x i y koordinatu: " << endl;
	cin >> x >> y;
	p.SetXYPosition(x, y);
	float x1, y1;
	p.GetXYPosition(x1, y1);
	
	cout << "Koordinate u polarnom sustavu su " << p<< endl;
	

	return 0;
}
